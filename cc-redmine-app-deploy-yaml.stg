/*
 * Mandatory:
 *
 * vars.redmineapp.image.name
 * vars.redmineapp.image.version
 * vars.redmineapp.limits.cpu
 * vars.redmineapp.limits.memory
 * vars.redmineapp.requests.cpu
 * vars.redmineapp.requests.memory
 * vars.redmineapp.nginx.hosts[]
 * vars.redmineapp.puma.minThreads
 * vars.redmineapp.puma.maxThreads
 * vars.redmineapp.pume.workers
 * vars.redmineapp.pume.timeout
 * vars.nginx.image.name
 * vars.nginx.image.version
 * vars.nginx.limits.cpu
 * vars.nginx.limits.memory
 * vars.nginx.requests.cpu
 * vars.nginx.requests.memory
 * vars.nginx.workerProcesses
 * vars.nginx.workerConnections
 * vars.nginx.clientMaxBodySize
 * 
 * Optional:
 * 
 * vars.redmineapp.affinityRequired
 * vars.redmineapp.tolerations[].key
 * vars.redmineapp.tolerations[].effect
 * vars.redmineapp.tolerations[].value
 */

import "nginx_config.stg"
import "affinities.stg"
import "tolerations.stg"
import "ingress_config.stg"

/*
 *
 */
cc-redmine-app-deploy-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: redmine-app
  namespace: anrisoftware-com
  labels:
    app: redmine
    tier: frontend
    group: anrisoftware-com
data:
  additional_environment.rb: |
    config.log_level = :warn

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: redmine-nginx-r10
  namespace: anrisoftware-com
  labels:
    app: nginx
    tier: frontend
    group: anrisoftware-com
data:
  nginx.conf: |
    <nginxDefaults(parent, vars)>
    http {
        <nginxHttpDefaults(parent, vars)>
        upstream backend {
            server 127.0.0.1:3000 max_fails=3 fail_timeout=<vars.nginx.readTimeout>;
        }
        <nginxVirtualHosts(parent, vars, vars.redmineapp.nginx.hosts)>
        server {
            listen 8080 default_server;
            listen [::]:8080 default_server;
            server_name <first(vars.redmineapp.nginx.hosts)>;
            root /var/www/html/public;
            index index.php;
            <nginxLocationFavicon(parent, vars)>
            <nginxLocationRobots(parent, vars)>
            <nginxLocationHidden(parent, vars)>
            <nginxLocationGitFiles(parent, vars)>
            ## All static files will be served directly.
            location ~* ^(?:(?:help\/)|(?:images\/)|(?:javascripts\/)|(?:plugin_assets\/)|(?:stylesheets\/)|(?:themes\/)).+\.(?:css|js|jpe?g|gif|htc|ico|png|html)$ {
                <nginxLocationStaticFilesConfig(parent, vars)>
            }
            <nginxRootProxyPassBackendLocation(parent, vars)>
        }
    }

---

apiVersion: v1
kind: Service
metadata:
  name: redmine-app
  namespace: anrisoftware-com
  labels:
    app: redmine-app
    tier: frontend
    group: anrisoftware-com
spec:
  ports:
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app: redmine-app

---

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: redmine-app
  namespace: anrisoftware-com
  labels:
    app: redmine-app
    tier: frontend
    group: anrisoftware-com
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redmine-app
      tier: frontend
      group: anrisoftware-com
  template:
    metadata:
      labels:
        app: redmine-app
        tier: frontend
        group: anrisoftware-com
    spec:
      containers:
      - image: <vars.redmineapp.image.name>:<vars.redmineapp.image.version>
        name: redmine-app
        env:
        - name: REDMINE_DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: redmine-db
              key: redmine_db
        - name: REDMINE_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: redmine-db
              key: redmine_user
        - name: REDMINE_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redmine-db
              key: redmine_password
        - name: REDMINE_DB_MYSQL
          value: "mariadb"
        - name: PUMA_MIN_THREADS
          value: "<vars.redmineapp.puma.minThreads>"
        - name: PUMA_MAX_THREADS
          value: "<vars.redmineapp.puma.maxThreads>"
        - name: PUMA_CLUSTER_WORKERS
          value: "<vars.redmineapp.pume.workers>"
        - name: PUMA_WORKER_TIMEOUT
          value: "<vars.redmineapp.puma.timeout>"
        - name: PUMA_WORKER_BOOT_TIMEOUT
          value: "<vars.redmineapp.puma.timeout>"
        ports:
        - containerPort: 3000
          name: "http"
        resources:
          limits:
            cpu: <vars.redmineapp.limits.cpu>
            memory: <vars.redmineapp.limits.memory>
          requests:
            cpu: <vars.redmineapp.requests.cpu>
            memory: <vars.redmineapp.requests.memory>
        volumeMounts:
        - mountPath: "/var/www/html"
          name: data
          subPath: redmine_html
        - mountPath: /redmine-in
          name: config
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 300
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 10
      - image: <vars.nginx.image.name>:<vars.nginx.image.version>
        name: nginx
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: <vars.nginx.limits.cpu>
            memory: <vars.nginx.limits.memory>
          requests:
            cpu: <vars.nginx.requests.cpu>
            memory: <vars.nginx.requests.memory>
        volumeMounts:
        - mountPath: "/var/www/html"
          name: data
          subPath: redmine_html
        - mountPath: /nginx-in
          name: nginx-config
      restartPolicy: Always
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: anrisoftware-com-data
      - name: config
        configMap:
          name: redmine-app
      - name: nginx-config
        configMap:
          name: redmine-nginx-r10
      <affinitiesGroup(parent, vars, vars.redmineapp.affinityRequired)>
      <tolerationMaster(parent, vars, vars.redmineapp.allowOnMaster)>
      <tolerations(parent, vars, vars.redmineapp.tolerations, vars.redmineapp.allowOnMaster)>

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: redmine-app
  namespace: anrisoftware-com
  labels:
    app: redmine-app
    tier: frontend
    group: anrisoftware-com
  annotations:
    <ingressDefaultAnnotations(parent, vars, vars.redmineapp.nginx)>
spec:
  <ingressDefaultSpec(parent, vars, vars.redmineapp.nginx, "redmine-app")>

---

>>
