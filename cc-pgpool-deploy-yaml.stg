/*
 * Mandatory:
 *
 * vars.pgpool.image.name
 * vars.pgpool.image.version
 * vars.pgpool.limits.cpu
 * vars.pgpool.limits.memory
 * vars.pgpool.requests.cpu
 * vars.pgpool.requests.memory
 * vars.pgpool.primaryUser
 * vars.pgpool.primaryPassword
 * vars.pgpool.user
 * vars.pgpool.password
 * vars.pgpool.database
 * 
 * Optional:
 * 
 * vars.pgpool.affinityRequired
 * vars.pgpool.tolerations[].key
 * vars.pgpool.tolerations[].effect
 * vars.pgpool.tolerations[].value
 */

import "affinities.stg"
import "tolerations.stg"

/*
 *
 */
cc-pgpool-deploy-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: Secret
metadata:
  name: pgpool-r1
  namespace: anrisoftware-com
  labels:
    app: pgpool
    tier: backend
    group: anrisoftware-com
type: Opaque
data:
  primary_user: <vars.pgpool.primaryUser;format="base64">
  primary_password: <vars.pgpool.primaryPassword;format="base64">
  user: <vars.pgpool.user;format="base64">
  password: <vars.pgpool.password;format="base64">
  database: <vars.pgpool.database;format="base64">

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: pgpool-r1
  namespace: anrisoftware-com
  labels:
    app: pgpool
    tier: backend
    group: anrisoftware-com
data:
  pgpool.conf: |
    listen_addresses = '*'
    port = 5432
    socket_dir = '/tmp'
    pcp_port = 9898
    pcp_socket_dir = '/tmp'
    backend_hostname0 = 'postgres-primary'
    backend_port0 = 5432
    backend_weight0= 1
    backend_flag0= 'ALLOW_TO_FAILOVER'
    backend_hostname1 = 'postgres-replica'
    backend_port1 = 5432
    backend_weight1= 1
    backend_flag1= 'ALLOW_TO_FAILOVER'
    enable_pool_hba = on
    pool_passwd = 'pool_passwd'
    authentication_timeout = 60
    ssl = off
    num_init_children = 5
    max_pool = 4
    child_life_time = 300
    child_max_connections = 0
    connection_life_time = 0
    client_idle_limit = 0
    log_destination = 'stderr'
    print_timestamp = on
    log_connections = on
    log_hostname = on
    log_statement = on
    log_per_node_statement = off
    log_standby_delay = 'if_over_threshold'
    syslog_facility = 'LOCAL0'
    syslog_ident = 'pgpool'
    debug_level = 0
    pid_file_name = '/tmp/pgpool.pid'
    logdir = '/tmp'
    connection_cache = on
    reset_query_list = 'ABORT; DISCARD ALL'
    replication_mode = off
    replicate_select = off
    insert_lock = off
    lobj_lock_table = ''
    replication_stop_on_mismatch = off
    failover_if_affected_tuples_mismatch = off
    load_balance_mode = on
    ignore_leading_white_space = on
    white_function_list = ''
    black_function_list = 'currval,lastval,nextval,setval'
    master_slave_mode = on
    master_slave_sub_mode = 'stream'
    sr_check_period = 10
    sr_check_user = 'testdb'
    sr_check_password = 'testdb'
    delay_threshold = 10000000
    follow_master_command = ''
    parallel_mode = off
    pgpool2_hostname = ''
    health_check_period = 30
    health_check_timeout = 20
    health_check_user = 'testdb'
    health_check_password = 'testdb'
    health_check_max_retries = 0
    health_check_retry_delay = 1
    failover_command = ''
    failback_command = ''
    fail_over_on_backend_error = on
    search_primary_node_timeout = 10
    recovery_user = 'testdb'
    recovery_password = 'testdb'
    recovery_1st_stage_command = ''
    recovery_2nd_stage_command = ''
    recovery_timeout = 90
    client_idle_limit_in_recovery = 0
    use_watchdog = off
    trusted_servers = ''
    ping_path = '/bin'
    wd_hostname = ''
    wd_port = 9000
    wd_authkey = ''
    delegate_IP = ''
    ifconfig_path = '/sbin'
    if_up_cmd = 'ifconfig eth0:0 inet $_IP_$ netmask 255.255.255.0'
    if_down_cmd = 'ifconfig eth0:0 down'
    arping_path = '/usr/sbin'           
    arping_cmd = 'arping -U $_IP_$ -w 1'
    clear_memqcache_on_escalation = on
    wd_escalation_command = ''
    wd_lifecheck_method = 'heartbeat'
    wd_interval = 10
    wd_heartbeat_port = 9694
    wd_heartbeat_keepalive = 2
    wd_heartbeat_deadtime = 30
    heartbeat_destination0 = 'host0_ip1'
    heartbeat_destination_port0 = 9694
    heartbeat_device0 = ''
    wd_life_point = 3
    wd_lifecheck_query = 'SELECT 1'
    wd_lifecheck_dbname = 'template1'
    wd_lifecheck_user = 'nobody'
    wd_lifecheck_password = ''
    relcache_expire = 0
    relcache_size = 256
    check_temp_table = on
    memory_cache_enabled = off
    memqcache_method = 'shmem'
    memqcache_memcached_host = 'localhost'
    memqcache_memcached_port = 11211
    memqcache_total_size = 67108864
    memqcache_max_num_cache = 1000000
    memqcache_expire = 0
    memqcache_auto_cache_invalidation = on
    memqcache_maxcache = 409600
    memqcache_cache_block_size = 1048576
    memqcache_oiddir = '/var/log/pgpool/oiddir'
    white_memqcache_table_list = ''
    black_memqcache_table_list = ''
---

apiVersion: v1
kind: Service
metadata:
  name: pgpool
  namespace: anrisoftware-com
  labels:
    app: pgpool
    tier: backend
    group: anrisoftware-com
spec:
  ports:
  - name: "postgres"
    port: 5432
    targetPort: 5432
  - name: "pcp"
    port: 9898
    targetPort: 9898
  selector:
    app: pgpool

---

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: pgpool
  namespace: anrisoftware-com
  labels:
    app: pgpool
    tier: backend
    group: anrisoftware-com
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgpool
      tier: backend
      group: anrisoftware-com
  template:
    metadata:
      labels:
        app: pgpool
        tier: backend
        group: anrisoftware-com
    spec:
      containers:
      - image: <vars.pgpool.image.name>:<vars.pgpool.image.version>
        name: pgpool
        env:
        - name: PG_PRIMARY_USER
          valueFrom:
            secretKeyRef:
              name: pgpool-r1
              key: primary_user
        - name: PG_PRIMARY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgpool-r1
              key: primary_password
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: pgpool-r1
              key: user
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgpool-r1
              key: password
        - name: PG_DATABASE
          valueFrom:
            secretKeyRef:
              name: pgpool-r1
              key: database
        ports:
        - containerPort: 5432
          name: "postgres"
        - containerPort: 9898
          name: "pcp"
        resources:
          limits:
            cpu: <vars.pgpool.limits.cpu>
            memory: <vars.pgpool.limits.memory>
          requests:
            cpu: <vars.pgpool.requests.cpu>
            memory: <vars.pgpool.requests.memory>
        volumeMounts:
        - mountPath: /pgconf/pgpoolconfigdir
          name: pgpool-config
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 10
      restartPolicy: Always
      volumes:
      - name: pgpool-config
        configMap:
          name: pgpool-r1
      <affinitiesGroup(parent, vars, vars.pgpool.affinityRequired)>
      <tolerationMaster(parent, vars, vars.pgpool.allowOnMaster)>
      <tolerations(parent, vars, vars.pgpool.tolerations, vars.pgpool.allowOnMaster)>

---

>>
