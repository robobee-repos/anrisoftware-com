/*
 * Mandatory:
 *
 * vars.rsync.image.name
 * vars.rsync.image.version
 * vars.rsync.limits.cpu
 * vars.rsync.limits.memory
 * vars.rsync.requests.cpu
 * vars.rsync.requests.memory
 */

import "affinities.stg"

cc-rsync-deploy-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: Service
metadata:
  name: rsync-redmine
  namespace: anrisoftware-com
  labels:
    app: rsync-redmine
    tier: backup
    group: anrisoftware-com
spec:
  ports:
  - name: "rsync"
    port: 8873
    targetPort: 8873
  selector:
    app: rsync-redmine

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rsync-db
  namespace: anrisoftware-com
  labels:
    app: rsync-db
    tier: backup
    group: anrisoftware-com
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rsync-db
      tier: backup
      group: anrisoftware-com
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rsync-db
        tier: backup
        group: anrisoftware-com
    spec:
      containers:
      - image: <vars.rsync.image.name>:<vars.rsync.image.version>
        name: rsync
        env:
        - name: RSYNC_USERNAME
          valueFrom:
            secretKeyRef:
              name: rsync-passwords
              key: user
        - name: RSYNC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rsync-passwords
              key: password
        ports:
        - containerPort: 8873
          name: "rsync"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - "rsync rsync://${RSYNC_USERNAME}@localhost:8873/data/data/index.html /tmp/"
          initialDelaySeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: <vars.rsync.limits.cpu>
            memory: <vars.rsync.limits.memory>
          requests:
            cpu: <vars.rsync.requests.cpu>
            memory: <vars.rsync.requests.memory>
        volumeMounts:
        - mountPath: /data
          name: anrisoftware-com-data
          subPath: mariadb
      restartPolicy: Always
      volumes:
      - name: anrisoftware-com-data
        persistentVolumeClaim:
          claimName: anrisoftware-com-data
<affinitiesGroup(parent, vars)>

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rsync-redmine
  namespace: anrisoftware-com
  labels:
    app: rsync-redmine
    tier: backup
    group: anrisoftware-com
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rsync-redmine
      tier: backup
      group: anrisoftware-com
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rsync-redmine
        tier: backup
        group: anrisoftware-com
    spec:
      containers:
      - image: <vars.rsync.image.name>:<vars.rsync.image.version>
        name: rsync
        env:
        - name: RSYNC_USERNAME
          valueFrom:
            secretKeyRef:
              name: rsync-passwords
              key: user
        - name: RSYNC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rsync-passwords
              key: password
        ports:
        - containerPort: 8873
          name: "rsync"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - "rsync rsync://${RSYNC_USERNAME}@localhost:8873/data/data/index.html /tmp/"
          initialDelaySeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: <vars.rsync.limits.cpu>
            memory: <vars.rsync.limits.memory>
          requests:
            cpu: <vars.rsync.requests.cpu>
            memory: <vars.rsync.requests.memory>
        volumeMounts:
        - mountPath: /data
          name: anrisoftware-com-data
          subPath: html
      restartPolicy: Always
      volumes:
      - name: anrisoftware-com-data
        persistentVolumeClaim:
          claimName: anrisoftware-com-data
<affinitiesGroup(parent, vars)>

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rsync-repo
  namespace: anrisoftware-com
  labels:
    app: rsync-repo
    tier: backup
    group: anrisoftware-com
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rsync-repo
      tier: backup
      group: anrisoftware-com
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rsync-repo
        tier: backup
        group: anrisoftware-com
    spec:
      containers:
      - image: <vars.rsync.image.name>:<vars.rsync.image.version>
        name: rsync
        env:
        - name: RSYNC_USERNAME
          valueFrom:
            secretKeyRef:
              name: rsync-passwords
              key: user
        - name: RSYNC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rsync-passwords
              key: password
        ports:
        - containerPort: 8873
          name: "rsync"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - "rsync rsync://${RSYNC_USERNAME}@localhost:8873/data/data/index.html /tmp/"
          initialDelaySeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: <vars.rsync.limits.cpu>
            memory: <vars.rsync.limits.memory>
          requests:
            cpu: <vars.rsync.requests.cpu>
            memory: <vars.rsync.requests.memory>
        volumeMounts:
        - mountPath: /data
          name: anrisoftware-com-repo
      restartPolicy: Always
      volumes:
      - name: anrisoftware-com-repo
        persistentVolumeClaim:
          claimName: anrisoftware-com-repo
<affinitiesGroup(parent, vars)>

---

>>
