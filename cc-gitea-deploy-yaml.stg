/*
 * Mandatory:
 *
 * vars.gitea.image.name
 * vars.gitea.image.version
 * vars.gitea.limits.cpu
 * vars.gitea.limits.memory
 * vars.gitea.requests.cpu
 * vars.gitea.requests.memory
 * vars.gitea.nginx.hosts[]
 * vars.gitea.nginx.workerProcesses
 * vars.gitea.nginx.workerConnections
 * vars.gitea.nginx.clientMaxBodySize
 * vars.gitea.nginx.readTimeout
 * vars.nginx.image.name
 * vars.nginx.image.version
 * vars.nginx.limits.cpu
 * vars.nginx.limits.memory
 * vars.nginx.requests.cpu
 * vars.nginx.requests.memory
 * 
 * Optional:
 * 
 * vars.gitea.affinityRequired
 * vars.gitea.tolerations[].key
 * vars.gitea.tolerations[].effect
 * vars.gitea.tolerations[].value
 */

import "nginx_config.stg"
import "affinities.stg"
import "tolerations.stg"
import "ingress_config.stg"

/*
 *
 */
cc-gitea-deploy-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: gitea-nginx-r1
  namespace: anrisoftware-com
  labels:
    app: nginx
    tier: frontend
    group: anrisoftware-com
data:
  nginx.conf: |
    <nginxDefaults(parent, vars)>
    http {
        upstream backend {
            server localhost:3000 max_fails=3 fail_timeout=<vars.gitea.nginx.readTimeout>;
        }
        <nginxVirtualHosts(parent, vars)>
        server {
            listen 8080 default_server;
            listen [::]:8080 default_server;
            server_name <first(vars.gitea.nginx.hosts)>;
            root /var/www/html;
            index index.php;
            <nginxDefaultLocations(parent, vars)>
            ## Protect .git files.
            location ^~ /.git {
                return 404;
            }
            #
            location / {
              <nginxRootProxyPassBackendLocationConfig(parent, vars)>
            }
        }
    }

---

apiVersion: v1
kind: Service
metadata:
  name: gitea
  namespace: anrisoftware-com
  labels:
    app: gitea
    tier: frontend
    group: anrisoftware-com
spec:
  ports:
  - name: "http"
    port: 8080
    targetPort: 8080
  - name: "ssh"
    port: 4444
    targetPort: 4444
  selector:
    app: gitea

---

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: gitea
  namespace: anrisoftware-com
  labels:
    app: gitea
    tier: frontend
    group: anrisoftware-com
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitea
      tier: frontend
      group: anrisoftware-com
  template:
    metadata:
      labels:
        app: gitea
        tier: frontend
        group: anrisoftware-com
    spec:
      containers:
      - image: <vars.gitea.image.name>:<vars.gitea.image.version>
        name: gitea
        env:
        ports:
        - containerPort: 22
          name: "ssh"
        - containerPort: 3000
          name: "gitea"
        resources:
          limits:
            cpu: <vars.gitea.limits.cpu>
            memory: <vars.gitea.limits.memory>
          requests:
            cpu: <vars.gitea.requests.cpu>
            memory: <vars.gitea.requests.memory>
        volumeMounts:
        - mountPath: "/data"
          name: data
          subPath: gitea_data
        - mountPath: "/var/www/html"
          name: data
          subPath: gitea_html
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 10
      - image: <vars.nginx.image.name>:<vars.nginx.image.version>
        name: nginx
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 600
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: <vars.nginx.limits.cpu>
            memory: <vars.nginx.limits.memory>
          requests:
            cpu: <vars.nginx.requests.cpu>
            memory: <vars.nginx.requests.memory>
        volumeMounts:
        - mountPath: "/var/www/html"
          name: data
          subPath: gitea_html
        - mountPath: /nginx-in
          name: nginx-config
      restartPolicy: Always
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: anrisoftware-com-data
      - name: nginx-config
        configMap:
          name: gitea-nginx-r1
<affinitiesGroup(parent, vars, vars.gitea.affinityRequired)>
<tolerationMaster(parent, vars, vars.gitea.allowOnMaster)>
<tolerations(parent, vars, vars.gitea.tolerations, vars.gitea.allowOnMaster)>

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gitea
  namespace: anrisoftware-com
  labels:
    app: gitea
    tier: frontend
    group: anrisoftware-com
  annotations:
    <ingressDefaultAnnotations(parent, vars, vars.gitea.nginx)>
spec:
  <ingressDefaultSpec(parent, vars, "gitea">

---

>>
